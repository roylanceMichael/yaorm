syntax = "proto2";
package org.roylance.yaorm;

message SimpleInsertTest {
    optional string id = 1;
    optional string display = 2;
    optional int32 test_int32 = 3;
    optional int64 test_int64 = 4;
    optional uint32 test_uint32 = 5;
    optional uint64 test_uint64 = 6;
    optional sint32 test_sint32 = 7;
    optional sint64 test_sint64 = 8;
    optional fixed32 test_fixed32 = 9;
    optional fixed64 test_fixed64 = 10;
    optional sfixed32 test_sfixed32 = 11;
    optional sfixed64 test_sfixed64 = 12;
    optional bool test_bool = 13;
    optional bytes test_bytes = 14;
    optional double test_double = 15;
    optional float test_float = 16;

    enum CoolType {
        TEST=0;
        SAMPLE=1;
        SURPRISED=2;
    }
    optional CoolType cool_type = 17;
    optional Child child = 18;

    repeated CoolType cool_types = 19;
    repeated Child childs = 20;
}

message Child {
    optional string id = 1;
    optional string test_display = 2;
    repeated SubChild sub_child = 3;
    optional SubSubSubChild sub_sub_sub_child = 4;
}

message SubChild {
    optional string id = 1;
    optional string another_test_display = 2;
    optional bool cool_test = 3;
    repeated SubSubChild sub_sub_child = 4;
}

message SubSubChild {
    optional string id = 1;
    optional string sub_sub_display = 2;
    repeated SubSubSubChild sub_sub_sub_childs = 3;
}

message SubSubSubChild {
    optional string id = 1;
    optional string sub_sub_sub_display = 2;
}

message Person {
    optional string id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    repeated Address addresses = 4;
    repeated Phone phone_numbers = 5;
    optional Person mother = 6;
    optional Person father = 7;
    repeated Person friends = 8;
}

message Address {
    optional string id = 1;
    optional string address = 2;
    optional string city = 3;
    optional string state = 4;
    optional string zip = 5;
}

message Phone {
    optional string id = 1;
    optional string number = 2;
}
message WorkerConfiguration {
    optional string id = 1;
    optional string ip = 2;
    optional string port = 3;
    optional string host = 4;
    optional uint64 initialized_time = 5;
    optional WorkerState state = 6;
}

enum WorkerState {
    WORKING = 0;
    IDLE = 1;
}

enum WorkerToManagerMessageType {
    REGISTRATION = 0;
}

enum ManagerToManagerMessageType {
    ENSURE_WORKERS_WORKING = 0;
}

enum ActorRole {
    MANAGER = 0;
    WORKER = 1;
}

message Log {
    optional string id = 1;
    optional string message = 2;
}

message Dag {
    optional string id = 1;
    optional string display = 2;
    repeated Task flattened_tasks = 3;
    optional int64 execution_date = 4;
    optional int64 start_date = 5;
    optional int64 end_date = 6;
    optional int64 duration = 7;
    repeated Task uncompleted_tasks = 8;
    repeated Task processing_tasks = 9;
    repeated Task errored_tasks = 10;
    repeated Task completed_tasks = 11;
}

message Task {
    optional string id = 1;
    optional string display = 2;
    repeated TaskDependency dependencies = 3;
    optional string dag_id = 4;
    repeated Log logs = 5;
    optional int64 execution_date = 6;
    optional int64 start_date = 7;
    optional int64 end_date = 8;
    optional int64 duration = 9;
    optional string first_context_base_64 = 10;
    optional string second_context_base_64 = 11;
    optional string third_context_base_64 = 12;
}

message TaskDependency {
    optional string id = 1;
    optional string parent_task_id = 2;
}

message AddTaskToDag {
    optional string id = 1;
    optional Task parent_task = 2;
    optional Task new_task = 3;
    optional string first_context_base_64 = 4;
    optional string second_context_base_64 = 5;
    optional string third_context_base_64 = 6;
}

message CompleteTask {
    optional string id = 1;
    optional Task task = 2;
    optional WorkerConfiguration worker_configuration = 3;
    repeated string logs = 4;
    optional bool is_error = 5;
}

message User {
    optional string id = 1;
    optional string display = 2;
}

message UserDevice {
    optional string id = 1;
    optional User user = 2;
}