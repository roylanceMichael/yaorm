syntax = "proto3";
package org.roylance.yaorm;

message SimpleInsertTest {
    string id = 1;
    string display = 2;
    int32 test_int32 = 3;
    int64 test_int64 = 4;
    uint32 test_uint32 = 5;
    uint64 test_uint64 = 6;
    sint32 test_sint32 = 7;
    sint64 test_sint64 = 8;
    fixed32 test_fixed32 = 9;
    fixed64 test_fixed64 = 10;
    sfixed32 test_sfixed32 = 11;
    sfixed64 test_sfixed64 = 12;
    bool test_bool = 13;
    bytes test_bytes = 14;
    double test_double = 15;
    float test_float = 16;

    enum CoolType {
        TEST=0;
        SAMPLE=1;
        SURPRISED=2;
    }
    CoolType cool_type = 17;
    Child child = 18;

    repeated CoolType cool_types = 19;
    repeated Child childs = 20;
}

message Child {
    string id = 1;
    string test_display = 2;
    repeated SubChild sub_child = 3;
    SubSubSubChild sub_sub_sub_child = 4;
}

message SubChild {
    string id = 1;
    string another_test_display = 2;
    bool cool_test = 3;
    repeated SubSubChild sub_sub_child = 4;
}

message SubSubChild {
    string id = 1;
    string sub_sub_display = 2;
    repeated SubSubSubChild sub_sub_sub_childs = 3;
}

message SubSubSubChild {
    string id = 1;
    string sub_sub_sub_display = 2;
}

message Person {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    repeated Address addresses = 4;
    repeated Phone phone_numbers = 5;
    Person mother = 6;
    Person father = 7;
    repeated Person friends = 8;
}

message Address {
    string id = 1;
    string address = 2;
    string city = 3;
    string state = 4;
    string zip = 5;
}

message Phone {
    string id = 1;
    string number = 2;
}
message WorkerConfiguration {
    string id = 1;
    string ip = 2;
    string port = 3;
    string host = 4;
    uint64 initialized_time = 5;
    WorkerState state = 6;
}

enum WorkerState {
    WORKING = 0;
    IDLE = 1;
}

enum WorkerToManagerMessageType {
    REGISTRATION = 0;
}

enum ManagerToManagerMessageType {
    ENSURE_WORKERS_WORKING = 0;
}

enum ActorRole {
    MANAGER = 0;
    WORKER = 1;
}

message Log {
    string id = 1;
    string message = 2;
}

message Dag {
    string id = 1;
    string display = 2;
    repeated Task flattened_tasks = 3;
    int64 execution_date = 4;
    int64 start_date = 5;
    int64 end_date = 6;
    int64 duration = 7;
    repeated Task uncompleted_tasks = 8;
    repeated Task processing_tasks = 9;
    repeated Task errored_tasks = 10;
    repeated Task completed_tasks = 11;
}

message Task {
    string id = 1;
    string display = 2;
    repeated TaskDependency dependencies = 3;
    string dag_id = 4;
    repeated Log logs = 5;
    int64 execution_date = 6;
    int64 start_date = 7;
    int64 end_date = 8;
    int64 duration = 9;
    string first_context_base_64 = 10;
    string second_context_base_64 = 11;
    string third_context_base_64 = 12;
}

message TaskDependency {
    string id = 1;
    string parent_task_id = 2;
}

message AddTaskToDag {
    string id = 1;
    Task parent_task = 2;
    Task new_task = 3;
    string first_context_base_64 = 4;
    string second_context_base_64 = 5;
    string third_context_base_64 = 6;
}

message CompleteTask {
    string id = 1;
    Task task = 2;
    WorkerConfiguration worker_configuration = 3;
    repeated string logs = 4;
    bool is_error = 5;
}